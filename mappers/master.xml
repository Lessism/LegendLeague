<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Master">


<!--	Visit		-->
	
	<insert id="visit" parameterType="map">
	
		INSERT
			INTO Visit (
				session,
				menu,
				quit,
				submenu
			)
			VALUES (
				#{session},
				#{menu},
				NOW(),
		<if test="submenu == null">#{menu}</if>
		<if test="submenu != null">#{submenu}</if>
			)
	
	</insert>


<!--	Visit Check		-->
	
	<select id="visit_check" parameterType="map" resultType="boolean">
	
		SELECT EXISTS (
			SELECT
				session
			FROM
				Visit
			WHERE
				session = #{session}
			LIMIT
				1
		)
	
	</select>


<!--	Visit Next		-->
	
	<update id="visit_next" parameterType="map">
	
		UPDATE
			Visit
		SET
			quit = NOW()
		WHERE
			session = #{session} AND
		    visit = ( SELECT * FROM (
						SELECT
							MAX(visit)
						FROM
							Visit
						WHERE
							session = #{session}
					) AS visit);
					
		INSERT
			INTO Visit (
				session,
		        menu,
				quit,
				submenu
			)
			VALUES (
				#{session},
				#{menu},
				NOW(),
		<if test="submenu == null">#{menu}</if>
		<if test="submenu != null">#{submenu}</if>
			);
	
	</update>


<!--	Visit Stay		-->
	
	<update id="visit_stay" parameterType="map">
	
		UPDATE
			Visit
		SET
			quit = NOW()
		WHERE
			session = #{session} AND
		    visit = ( SELECT * FROM (
						SELECT
							MAX(visit)
						FROM
							Visit
						WHERE
							session = #{session}
					) AS visit);
	
	</update>


<!--	Visit Total		-->
	
	<select id="visit_total" resultType="int">
	
		SELECT
			COUNT(session)
		FROM (
			SELECT
				*
			FROM
				Visit
			GROUP BY
				session
		) AS total
	
	</select>


<!--	Visit Today		-->
	
	<select id="visit_today" resultType="int">
	
		SELECT
			COUNT(session)
		FROM (
			SELECT
				*
			FROM
				Visit
			WHERE
				DATE(visit) = CURDATE()
			GROUP BY
				session
		) AS today
	
	</select>


<!--	Visit Today Toal		-->
	
	<select id="visit_today_total" resultType="map">
	
		SELECT
			COUNT(session) visitor,
            SUM(page) totalpage,
            SUM(stay) totalstay,
            ROUND(AVG(page)) avgpage,
            ROUND(AVG(stay)) avgstay
		FROM (
			SELECT
				*, COUNT(submenu) page, SUM(TIMESTAMPDIFF(MINUTE, visit, quit)) stay
			FROM
				Visit
			WHERE
				DATE(visit) = CURDATE()
			GROUP BY
				session
		) AS today
	
	</select>


<!--	Visit Daily		-->
	
	<select id="visit_daily" resultType="map">
	
		SELECT
			DATE(visit) x, COUNT(session) y
		FROM (
			SELECT
				session, MIN(visit) visit
			FROM
				Visit
			GROUP BY
				session
		) AS session
		GROUP BY
			x
	
	</select>


<!--	Visit Time		-->
	
	<select id="visit_time" resultType="map">
	
		SELECT
			HOUR(visit) x, COUNT(DISTINCT(session)) y
		FROM
			Visit
		WHERE
			DATE(visit) = CURDATE()
		GROUP BY
			HOUR(visit)
	
	</select>


<!--	Visit Week		-->
	
	<select id="visit_week" resultType="map">
	
		SELECT
			CASE WEEKDAY(visit) 
				WHEN '0' THEN '월'
				WHEN '1' THEN '화'
				WHEN '2' THEN '수'
				WHEN '3' THEN '목'
				WHEN '4' THEN '금'
				WHEN '5' THEN '토'
				WHEN '6' THEN '일'
			END label, ROUND(COUNT(DISTINCT(session)) / total * 100) y
		FROM (
			SELECT
				session, visit, (
					SELECT
						COUNT(DISTINCT(session))
					FROM
						Visit
				) AS total
			FROM
				Visit
		) as visit
		GROUP BY
			WEEKDAY(visit)
	
	</select>


<!--	Visit Year		-->
	
	<select id="visit_year" resultType="map">
	
		SELECT
			YEAR(visit) x, COUNT(DISTINCT(session)) y
		FROM
			Visit
		GROUP BY
			YEAR(visit)
	
	</select>


<!--	Visit Month		-->
	
	<select id="visit_month" resultType="map">
	
		SELECT
			MONTH(visit) x, COUNT(DISTINCT(session)) y
		FROM
			Visit
		GROUP BY
			MONTH(visit)
	
	</select>


<!--	Visit Day		-->
	
	<select id="visit_day" resultType="map">
	
		SELECT
			DAY(visit) x, COUNT(DISTINCT(session)) y
		FROM
			Visit
		GROUP BY
			DAY(visit)
	
	</select>


<!--	Visit Menu		-->
	
	<select id="visit_menu" resultType="map">
	
		SELECT
			UPPER(menu) label,
		    ROUND(COUNT(menu) / (
				SELECT
					COUNT(menu)
				FROM
					Visit
			) * 100) y
		FROM
			Visit
		GROUP BY
			menu
		ORDER BY
			y DESC
	
	</select>


<!--	Visit Submenu		-->
	
	<select id="visit_submenu" parameterType="map" resultType="map">
	
		SELECT
			UPPER(submenu) indexLabel, ROUND(COUNT(submenu) / (
				SELECT
					COUNT(menu)
				FROM
					Visit
				WHERE
					menu = #{menu}
			) * 100) AS label, ROUND(COUNT(submenu) / (
				SELECT
					COUNT(menu)
				FROM
					Visit
				WHERE
					menu = #{menu}
			) * 100) AS y
		FROM
			Visit
		WHERE
			menu = #{menu}
		GROUP BY
			submenu
		ORDER BY
			y ASC
	
	</select>


<!--	Visit AVG Total		-->
	
	<select id="visit_avg_total" resultType="map">
	
		SELECT (
			SELECT
				ROUND(AVG(visitor)) avgyear
			FROM (
				SELECT
					visit, COUNT(DISTINCT(session)) visitor, 'year'
				FROM
					Visit
				GROUP BY
					YEAR(visit)
			) AS year
			GROUP BY
				year
		) AS year, (
			SELECT
				ROUND(AVG(visitor)) avgmonth
			FROM (
				SELECT
					visit, COUNT(DISTINCT(session)) visitor, 'month'
				FROM
					Visit
				GROUP BY
					MONTH(visit)
			) AS month
			GROUP BY
				month
		) AS month, (
			SELECT
				ROUND(AVG(visitor)) avgday
			FROM (
				SELECT
					visit, COUNT(DISTINCT(session)) visitor, 'day'
				FROM
					Visit
				GROUP BY
					DAY(visit)
			) AS day
			GROUP BY
				day
		) AS day
	
	</select>


<!--	Visit List Total		-->
	
	<select id="visit_list_total" resultType="map">
	
		SELECT
			SUM(visitcount) totalcount,
			SUM(visitpage) totalpage,
		    SUM(visitstay) totalstay,
		    ROUND(AVG(avgmenucount)) totalavgmenucount,
		    ROUND(AVG(avgstay)) totalavgstay,
		    ROUND(AVG(visitcount)) totalavgcount
		FROM (
			SELECT
				 DATE(visit) visitday, COUNT(submenu) visitpage, SUM(TIMESTAMPDIFF(Minute, visit, quit)) visitstay
			FROM
				Visit
			GROUP BY
				visitday
		) AS visit
		INNER
			JOIN (
				SELECT
					AVG(menucount) avgmenucount, AVG(stay) avgstay, COUNT(session) visitcount, DATE(visit) visitday
				FROM (
					SELECT
						session, visit, COUNT(submenu) menucount, SUM(TIMESTAMPDIFF(Minute, visit, quit)) stay
					FROM
						Visit
					GROUP BY
						session
				) as session
				GROUP BY
					DATE(visit)
			) AS avg
		ON visit.visitday = avg.visitday
	
	</select>


<!--	Visit List		-->
	
	<select id="visit_list" resultType="map">
	
		SELECT
			*
		FROM (
			SELECT
				 DATE(visit) visitday, COUNT(submenu) visitpage, SUM(TIMESTAMPDIFF(Minute, visit, quit)) visitstay
			FROM
				Visit
			GROUP BY
				visitday
		) AS visit
		INNER
			JOIN (
				SELECT
					ROUND(AVG(menucount)) avgmenucount, ROUND(AVG(stay)) avgstay, COUNT(session) visitcount, DATE(visit) visitday
				FROM (
					SELECT
						session, visit, COUNT(submenu) menucount, SUM(TIMESTAMPDIFF(Minute, visit, quit)) stay
					FROM
						Visit
					GROUP BY
						session
				) as session
				GROUP BY
					DATE(visit)
			) AS avg
		ON visit.visitday = avg.visitday
	
	</select>


<!--	Visit Stay Menu		-->
	
	<select id="visit_stay_menu" parameterType="map" resultType="map">
	
		SELECT
			UPPER(menu) menu, COUNT(menu) menucount, SUM(TIMESTAMPDIFF(MINUTE, visit, quit)) menustay
		FROM
			Visit
		WHERE
			menu = #{type}
		GROUP BY
			menu
		ORDER BY
			menustay DESC
	
	</select>


<!--	Visit Stay Submenu		-->
	
	<select id="visit_stay_submenu" parameterType="map" resultType="map">
	
		SELECT
			UPPER(submenu) menu, COUNT(submenu) menucount, SUM(TIMESTAMPDIFF(MINUTE, visit, quit)) menustay
		FROM
			Visit
		WHERE
			menu = #{type}
		GROUP BY
			submenu
		ORDER BY
			menustay DESC
	
	</select>
	
	
	
</mapper>
