<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="League">


<!--	League Season		-->

	<select id="season" resultType="map">
		
		SELECT
			*
		FROM
			Season
		ORDER BY
			season DESC
		LIMIT
			1
		
	</select>
	
	
<!--	Recency Season		-->

	<select id="recency_season" resultType="int">
		
		SELECT
			season
		FROM
			Season
		ORDER BY
			season DESC
		LIMIT
			1
		
	</select>
	
	
<!--	Recency Season Round		-->

	<select id="recency_season_round" resultType="map">
		
		SELECT
			*
		FROM
			Round
		WHERE
			season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)
		<if test="round != null"> AND
			round = #{round}
		</if>
		
	</select>
	
	
<!--	Recency Season Round Score		-->

	<select id="recency_season_round_score" resultType="map">
		
		SELECT
			*
		FROM
			Score
		WHERE
			season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season) AND
			round = #{round} AND
			NOT goal = 0
		
	</select>
	
	
<!--	Recency Result Round		-->

	<select id="recency_result_round" resultType="String">
		
		SELECT 
			MAX(round)
		FROM 
			Round
		WHERE
			season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season) AND
			score IS NOT NULL
	
	</select>
	
	
<!--	Recency NOW Round		-->

	<select id="recency_now_round" resultType="String">
		
		SELECT 
			round
		FROM 
			Season
		WHERE
			season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)
	
	</select>
	
	
<!--	Recency MAX Round		-->

	<select id="recency_max_round" resultType="String">
		
		SELECT 
			MAX(round)
		FROM 
			Round
		WHERE
			season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)
	
	</select>
	
	
<!--	Before Season		-->

	<select id="before_season" parameterType="map" resultType="map">
		
		SELECT
			*
		FROM
			Season
		WHERE
			season	= #{season}
		
	</select>
	
	
<!--	Before Ranking		-->

	<select id="before_ranking" parameterType="map" resultType="map">
		
		SELECT
			*
		FROM
			Ranking
		WHERE
			season	= #{season}	AND
			round	= #{round}
		ORDER BY
			point DESC, goalfor - goalagainst DESC
		
	</select>
	
	
<!--	Before Roster		-->
	
	<select id="before_roster" resultType="String">
	
		SELECT
			roster
		FROM
			Season
		WHERE
			season = #{season}
	
	</select>
	
	
<!--	League Title		-->
	
	<select id="title" resultType="map">
	
		SELECT
			*
		FROM
			Season
		ORDER BY
			season DESC
	
	</select>
	
	
<!--	League Information		-->

	<select id="information" resultType="map">
	
		SELECT
			*
		FROM
			Club
		WHERE
			roster = 1
		ORDER BY
			ovr DESC
	
	</select>
	
	
<!--	Key Player		-->

	<select id="keyplayer" resultType="map">
	
		SELECT
			*
		FROM
			Player
		WHERE
			club = #{name}
		ORDER BY
			ovr DESC
		LIMIT
			1
			
	</select>
	
	
<!--	Point		-->

	<select id="point" resultType="int">
		
		SELECT
			point
		FROM
			Ranking
		WHERE
			season	= 	<if test="season == null"> (SELECT * FROM (SELECT MAX(season) FROM Season) AS season) </if>
						<if test="season != null"> #{season}</if> AND
			round	= #{round} AND
			club	= #{name} AND
			NOT	game = 0
		
	</select>
	
	
<!--	Ranking Labels		-->

	<select id="labels" resultType="String">
	
		SELECT
			name
		FROM
			Club c
		LEFT
			JOIN Ranking r
			ON c.name = r.club
		WHERE
			c.roster = 1 AND
		    r.season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season) AND
			NOT r.game = 0
		GROUP BY
			c.name
		ORDER BY
			r.round DESC,
			r.point DESC
	
	</select>
	
	
<!--	Notable Manager		-->
	
	<select id="notable_manager" resultType="map">
	
		SELECT
			m.*
		FROM
			Manager m
		LEFT JOIN
			Club c
		ON
			m.club = c.name
		WHERE
			c.roster = 1
		ORDER BY
			m.ovr DESC
		LIMIT
			1
	
	</select>
	
	
<!--	Notable Player		-->
	
	<select id="notable_player" resultType="map">
	
		SELECT
			p.*,po.*
		FROM
			Player p
		LEFT JOIN Position po
			ON p.position = po.position
		LEFT JOIN Club c
			ON p.club = c.name
		WHERE
			c.roster = 1
		ORDER BY
			p.ovr DESC
		LIMIT
			6
	
	</select>
	
	
<!--	Club Ranking		-->

	<select id="club_ranking" parameterType="map" resultType="map">
	
		SELECT
			*
		FROM
			Ranking
		WHERE
			season	= (SELECT * FROM (SELECT MAX(season) FROM Season) AS season) AND
			round	= (SELECT * FROM (SELECT round FROM Season WHERE season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)) AS round)
		ORDER BY
			point DESC, goalfor - goalagainst DESC
	
	</select>
	
	
<!--	Player Ranking		-->
	
	<select id="player_ranking" parameterType="map" resultType="map">
	
		SELECT
			*,
			<if test="score == 'goal'"> SUM(goal) goalscorer </if>
			<if test="score == 'assist'"> SUM(assist) assistprovider </if>
			<if test="score == 'rating'"> AVG(rating) toprating </if>
		FROM
			Score
		WHERE
			season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)
			<if test="score == 'goal'">AND NOT goal = 0 </if>
			<if test="score == 'assist'">AND NOT assist = 0 </if>
		GROUP BY
			player
		ORDER BY
			<if test="score == 'goal'"> goalscorer DESC, assist DESC, rating DESC </if>
			<if test="score == 'assist'"> assistprovider DESC, goal DESC, rating DESC </if>
			<if test="score == 'rating'"> toprating DESC, goal DESC, assist DESC </if>
		LIMIT
			10
	
	</select>
	
<!--	Match		-->

	<select id="match" parameterType="map" resultType="map">
	
		SELECT
			*
		FROM
			Round
		WHERE
			season	= #{season} AND
			round	= #{round}
	
	</select>
	
	
<!--	Match schedule		-->

	<insert id="match_schedule" parameterType="map">
	
		<foreach collection="versus" index="idx" separator=";" close=";">
		
			INSERT
				INTO Round (
					season,
					round,
					versus
				)
				VALUES (
					#{season},
					#{round},
					#{versus[${idx}]}
				)
		
		</foreach>
		<foreach collection="club" index="idx" separator=";">
		
			INSERT
				INTO Ranking (
					season,
					round,
					club
				)
				VALUES (
					#{season},
					#{round},
					#{club[${idx}]}
				)
		
		</foreach>
	
	</insert>
	
	
<!--	Start Season		-->

	<update id="start_season" parameterType="map">
	
		UPDATE
			League
		SET
			round = 1
		WHERE
			season = #{season};
			
		UPDATE
			Season
		SET
			round = 1
		WHERE
			season = #{season}
	
	</update>
	
	
<!--	Lineup		-->

	<select id="lineup" parameterType="map" resultType="map">
	
		SELECT
			*
		FROM
			${role}
		WHERE
			club = #{name}
			
	</select>
	
	
<!--	Insert Score		-->

	<insert id="insert_score" parameterType="map">
	
		INSERT
			INTO Score (
				season,
				round,
				club,
				player,
				rating,
				goal,
				assist,
				opponent
			)
			VALUES (
				#{season},
				#{round},
				#{club},
				#{name},
				#{rating},
				#{goal},
				#{assist},
				#{opponent}
			)
	
	</insert>
	
	
<!--	Update Round		-->

	<update id="update_round" parameterType="map">
	
		UPDATE
			Round
		SET
			lineup	= #{lineup},
			score	= #{score}
		WHERE
			season	= #{season}	AND
			round	= #{round}	AND
			versus	= #{versus}
	
	</update>
	
	
<!--	Update Ranking	-->
	
	<update id="update_ranking" parameterType="map">
	
		UPDATE
			Ranking
		SET
			game	= 	#{round},
			win 	= 	( SELECT * FROM (
							SELECT
								win
							FROM
								Ranking
							WHERE
								season	= #{season}	AND
								round	= #{round}	AND
								club	= #{name}
						) AS win )
		<if test="win != null"> + #{win}</if>,
			draw	=	( SELECT * FROM (
							SELECT
								draw
							FROM
								Ranking
							WHERE
								season	= #{season}	AND
								round	= #{round}	AND
								club	= #{name}
						) AS draw )
		<if test="draw != null"> + #{draw}</if>,
			lose	=	( SELECT * FROM (
							SELECT
								lose
							FROM
								Ranking
							WHERE
								season	= #{season}	AND
								round	= #{round}	AND
								club	= #{name}
						) AS lose )
		<if test="lose != null"> + #{lose}</if>,
			goalfor	=	( SELECT * FROM (
							SELECT
								goalfor
							FROM
								Ranking
							WHERE
								season	= #{season}	AND
								round	= #{round}	AND
								club	= #{name}
						) AS goalfor )
		<if test="goalfor != null"> + #{goalfor}</if>,
			goalagainst	=	( SELECT * FROM (
							SELECT
								goalagainst
							FROM
								Ranking
							WHERE
								season	= #{season}	AND
								round	= #{round}	AND
								club	= #{name}
						) AS goalagainst )
		<if test="goalagainst != null"> + #{goalagainst}</if>
		WHERE
			season	= #{season}	AND
			round	= #{round}	AND
			club	= #{name};
			
		UPDATE
			Ranking
		SET
			point = 
				(SELECT wd.win * 3 + wd.draw FROM 
					(
						SELECT
							win, draw
						FROM
							Ranking
						WHERE
							season	= #{season}	AND
							round	= #{round}	AND
							club	= #{name}
					) AS wd
				)
		WHERE
			season	= #{season}	AND
			round	= #{round}	AND
			club	= #{name}
	
	
	</update>
	
	
<!--	Check Round		-->

	<select id="check_round" parameterType="map" resultType="int">
	
		SELECT
			SUM(game = ( SELECT * FROM (
							SELECT
								MAX(round)
							FROM
								Round
							WHERE
								season = #{season}
						) AS round )
			)
		<if test="name == null">
		=	( SELECT * FROM (
				SELECT
					COUNT(round)
				FROM
					Ranking
				WHERE
					season	= #{season}	AND
					round	= #{round}
			) AS round )
		</if>
		FROM
			Ranking
		WHERE
			season	= #{season} AND
		    round	= #{round}
		<if test="name != null"> AND
			club = #{name}
		</if>
	
	</select>
	
	
<!--	Next Ranking		-->

	<update id="next_ranking" parameterType="map">
	
		UPDATE
			Ranking
		SET
			game		= 	#{round},
			win 		= 	( SELECT * FROM (
							SELECT
								win
							FROM
								Ranking
							WHERE
								season	= #{season}	AND
								round	= #{round}	AND
								club	= #{name}
						) AS win ),
			draw		=	( SELECT * FROM (
							SELECT
								draw
							FROM
								Ranking
							WHERE
								season	= #{season}	AND
								round	= #{round}	AND
								club	= #{name}
						) AS draw ),
			lose		=	( SELECT * FROM (
							SELECT
								lose
							FROM
								Ranking
							WHERE
								season	= #{season}	AND
								round	= #{round}	AND
								club	= #{name}
						) AS lose ),
			goalfor		=	( SELECT * FROM (
							SELECT
								goalfor
							FROM
								Ranking
							WHERE
								season	= #{season}	AND
								round	= #{round}	AND
								club	= #{name}
						) AS goalfor ),
			goalagainst	=	( SELECT * FROM (
							SELECT
								goalagainst
							FROM
								Ranking
							WHERE
								season	= #{season}	AND
								round	= #{round}	AND
								club	= #{name}
						) AS goalagainst )
		WHERE
			season	= #{season}	AND
			round	= #{round} + 1	AND
			club	= #{name};
			
		UPDATE
			Ranking
		SET
			point = 
				(SELECT wd.win * 3 + wd.draw FROM 
					(
						SELECT
							win, draw
						FROM
							Ranking
						WHERE
							season	= #{season}	AND
							round	= #{round}	AND
							club	= #{name}
					) AS wd
				)
		WHERE
			season	= #{season}	AND
			round	= #{round} + 1	AND
			club	= #{name}
	
	</update>
	
<!--	Next Round		-->

	<update id="next_round" parameterType="map">
	
		UPDATE
			League
		SET
			round	= #{round} + 1
		WHERE
			season	= #{season};
		
		UPDATE
			Season
		SET
			round	= #{round} + 1
		WHERE
			season	= #{season}
	
	</update>
	
	
<!--	Result Game		-->
	
	<select id="result_game" parameterType="map" resultType="map">
	
		SELECT
			*
		FROM
			Round
		WHERE
			season	= #{season} AND
			round	= #{round}
	
	</select>
	
	
<!--	Result Score		-->
	
	<select id="result_score" parameterType="map" resultType="map">
	
		SELECT
			*
		FROM
			Score
		WHERE
			season	= #{season}	AND
			round	= #{round}	AND
			NOT goal = 0
	
	</select>
	
	
<!--	Champion		-->
	
	<select id="champion" resultType="map">
	
		SELECT
			*
		FROM
			Club
		WHERE
			name =	(SELECT * FROM
						(
							SELECT
								club
							FROM
								Ranking
							WHERE
								season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)
							ORDER BY
								point DESC, goalfor - goalagainst DESC
							LIMIT
								1
						) AS club
					)
	
	</select>
	
	
<!--	Ending		-->

	<update id="ending" parameterType="map">
	
		UPDATE
			Season
		SET
			champion		=	(SELECT * FROM (
									SELECT
										club
									FROM
										Ranking
									WHERE
										season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)
									ORDER BY
										point DESC
									LIMIT
										1
								) AS champion ),
			manager			=	(SELECT * FROM (
									SELECT
										manager
									FROM
										Club
									WHERE
										name = (SELECT * FROM (
													SELECT
														club
													FROM
														Ranking
													WHERE
														season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)
													ORDER BY
														point DESC
													LIMIT
														1
												) AS champion )
								) AS manager ),
			ballondor		=	(SELECT * FROM (
									SELECT
										player
									FROM
										Score
									WHERE
										season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)
									GROUP BY
										player
									ORDER BY
										AVG(rating) DESC, goal DESC, assist DESC
									LIMIT
										1
								) AS ballondor),
			goalscorer		=	(SELECT * FROM (
									SELECT
										player
									FROM
										Score
									WHERE
										season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)	AND
										NOT goal = 0
									GROUP BY
										player
									ORDER BY
										SUM(goal) DESC, assist DESC, rating DESC
									LIMIT
										1
								) AS goalscorer),
			assistprovider		=	(SELECT * FROM (
									SELECT
										player
									FROM
										Score
									WHERE
										season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)	AND
										NOT assist = 0
									GROUP BY
										player
									ORDER BY
										SUM(assist) DESC, goal DESC, rating DESC
									LIMIT
										1
								) AS assistprovider)
		WHERE
			season	= (SELECT * FROM (SELECT MAX(season) FROM Season) AS season);
	
		UPDATE
			Club
		SET
			history	= CONCAT_WS(',', (SELECT * FROM (SELECT history FROM Club WHERE name = #{name}) AS history), #{history} ' Legend League Champion')
		WHERE
			name	= #{name};
		
		UPDATE
			Manager
		SET
			history	= CONCAT_WS(',', (SELECT * FROM (SELECT history FROM Manager WHERE name = #{manager}) AS history), #{history} ' Legend League Champion')
		WHERE
			name	= #{manager};
		
		<foreach collection="lineup" item="player" index="idx" separator=";" close=";">
		
			UPDATE
				Player
			SET
				history	= CONCAT_WS(',', (SELECT * FROM (SELECT history FROM Player WHERE name = #{player${idx}}) AS history), #{history} ' Legend League Champion')
			WHERE
				name	= #{player${idx}}
				
		</foreach>
		
		UPDATE
			Player
		SET
			history = CONCAT_WS(',', (SELECT * FROM
										(SELECT history FROM Player WHERE name = 
											(SELECT * FROM (
												SELECT
													player
												FROM
													Score
												WHERE
													season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)
												GROUP BY
													player
												ORDER BY
													AVG(rating) DESC, goal DESC, assist DESC
												LIMIT
													1
											) AS ballondor)
										) AS history)
									, #{history} ' Ballon Dor')
		WHERE
			name = (SELECT * FROM (
						SELECT
							player
						FROM
							Score
						WHERE
							season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)
						GROUP BY
							player
						ORDER BY
							AVG(rating) DESC, goal DESC, assist DESC
						LIMIT
							1
					) AS ballondor);
		
		UPDATE
			Player
		SET
			history = CONCAT_WS(',', (SELECT * FROM
										(SELECT history FROM Player WHERE name = 
											(SELECT * FROM (
												SELECT
													player
												FROM
													Score
												WHERE
													season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)	AND
													NOT goal = 0
												GROUP BY
													player
												ORDER BY
													SUM(goal) DESC, assist DESC, rating DESC
												LIMIT
													1
											) AS goalscorer)
										) AS history)
									, #{history} ' 득점왕')
		WHERE
			name = (SELECT * FROM (
						SELECT
							player
						FROM
							Score
						WHERE
							season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)	AND
							NOT goal = 0
						GROUP BY
							player
						ORDER BY
							SUM(goal) DESC, assist DESC, rating DESC
						LIMIT
							1
					) AS goalscorer);
					
					
		UPDATE
			Player
		SET
			history = CONCAT_WS(',', (SELECT * FROM
										(SELECT history FROM Player WHERE name = 
											(SELECT * FROM (
												SELECT
													player
												FROM
													Score
												WHERE
													season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)	AND
													NOT assist = 0
												GROUP BY
													player
												ORDER BY
													SUM(assist) DESC, goal DESC, rating DESC
												LIMIT
													1
											) AS assistprovider)
										) AS history)
									, #{history} ' 도움왕')
		WHERE
			name = (SELECT * FROM (
						SELECT
							player
						FROM
							Score
						WHERE
							season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)	AND
							NOT assist = 0
						GROUP BY
							player
						ORDER BY
							SUM(assist) DESC, goal DESC, rating DESC
						LIMIT
							1
					) AS assistprovider);
		
		INSERT
			INTO Season (
				season,
				roster
			)
			VALUES (
				(SELECT * FROM (SELECT MAX(season) FROM Season) AS season)+1,
				(SELECT * FROM (SELECT roster FROM Season WHERE season = (SELECT * FROM (SELECT MAX(season) FROM Season) AS season)) AS roster)
			);
			
		UPDATE
			League
		SET
			season	= (SELECT * FROM (SELECT MAX(season) FROM Season) AS season),
			round	= null
		WHERE
			name	= 'Legend League'
					
	</update>
	
	

	
	
</mapper>